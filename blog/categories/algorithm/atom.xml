<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Algorithm | My Octopress Blog]]></title>
  <link href="http://yoursite.com/blog/categories/algorithm/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-05-15T00:23:18+08:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[segmentTree]]></title>
    <link href="http://yoursite.com/blog/2016/05/14/segmenttree/"/>
    <updated>2016-05-14T23:10:30+08:00</updated>
    <id>http://yoursite.com/blog/2016/05/14/segmenttree</id>
    <content type="html"><![CDATA[<h1>你好 Octopress</h1>

<h2>这里介绍Segmentree算法</h2>

<p><strong>这段文字被加粗了</strong></p>

<p><code>标亮</code></p>

<ul>
<li>Android</li>
<li>PHP</li>
<li>HTML

<ul>
<li>CSS3</li>
<li>HTML5

<blockquote><p>引用</p></blockquote></li>
</ul>
</li>
</ul>


<p><a href="http://www.baidu.com">百度一下</a></p>

<p><img src="http://www.nxist.com/Economic/images/banner1.jpg" alt="image" /></p>

<p><video width='640' height='320' preload='metadata' controls poster='http://assets.jikexueyuan.com/practice/list_android.jpg">http://assets.jikexueyuan.com/practice/list_android.jpg</a>'><source src='http://static-jkxy.qiniudn.com/event/jkxy_profile20150318.mp4">http://static-jkxy.qiniudn.com/event/jkxy_profile20150318.mp4</a>' ></video></p>

<pre><code>public class SegmentTree{
    public static void main(String args[]){
        System.out.println("Hello Octopress!");
    }
}
</code></pre>

<p><figure class='code'><figcaption><span>快速排序Java版 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>void sort(int []a, int left, int right){
</span><span class='line'>        if(left >= right)/&lt;em>如果左边索引大于或者等于右边的索引就代表已经整理完成一个组了&lt;/em>/
</span><span class='line'>        {
</span><span class='line'>            return ;
</span><span class='line'>        }
</span><span class='line'>        int i = left;
</span><span class='line'>        int j = right;
</span><span class='line'>        int key = a[left];&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>    while(i &lt; j)                               /*控制在当组内寻找一遍*/
</span><span class='line'>    {
</span><span class='line'>        while(i &lt; j &amp;&amp; key &lt;= a[j])
</span><span class='line'>        {
</span><span class='line'>            j--;/*向前寻找*/
</span><span class='line'>        }
</span><span class='line'>        a[i] = a[j];
</span><span class='line'>        while(i &lt; j &amp;&amp; key &gt;= a[i])
</span><span class='line'>        {
</span><span class='line'>            i++;
</span><span class='line'>        }
</span><span class='line'>        a[j] = a[i];
</span><span class='line'>    }
</span><span class='line'>
</span><span class='line'>    a[i] = key;/*当在当组内找完一遍以后就把中间数key回归*/
</span><span class='line'>    sort(a, left, i - 1);/*最后用同样的方式对分出来的左边的小组进行同上的做法*/
</span><span class='line'>    sort(a, i + 1, right);/*用同样的方式对分出来的右边的小组进行同上的做法*/
</span><span class='line'>}
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/blog/2016/05/14/HelloWorld/"/>
    <updated>2016-05-14T23:10:30+08:00</updated>
    <id>http://yoursite.com/blog/2016/05/14/HelloWorld</id>
    <content type="html"><![CDATA[<h1>你好</h1>

<h2>这是Octopress起步</h2>
]]></content>
  </entry>
  
</feed>
