<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javascript | Ranger]]></title>
  <link href="http://zhanheng.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://zhanheng.github.io/"/>
  <updated>2016-07-23T23:04:09+08:00</updated>
  <id>http://zhanheng.github.io/</id>
  <author>
    <name><![CDATA[Zhan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[jQuery实现常用功能]]></title>
    <link href="http://zhanheng.github.io/blog/2016/06/11/jsfixedsidebar/"/>
    <updated>2016-06-11T14:34:59+08:00</updated>
    <id>http://zhanheng.github.io/blog/2016/06/11/jsfixedsidebar</id>
    <content type="html"><![CDATA[<h4>1.在实际开发过程中，当网页内容往下滚动一定距离的时候，左边的菜单栏通常需要固定。</h4>

<p>原生js：</p>

<pre><code>1.封装原生的js常用方法     2.对sideBar进行固定操作，改变其css
</code></pre>

<p>{% codeblock  封装原生js的常用方法 %}
    <script>
        var Getid = function(id){ return document.getElementById(id);}
        var addEvent = function(obj,event,fun){
            if(obj.addEventListener()){
                obj.addEventListener(event,fun,false);
            }else if(obj.attachEvent()){
                obj.attachEvent(&ldquo;on&rdquo;+event,fun);
            }
        }
    </script>
{%endcodeblock%}
{% codeblock  用jQuery改变侧边栏的css %}
    <script>
        //获取菜单栏的div
        var lnSider = Getid(&ldquo;left-nav&rdquo;);
        addEvent(window,&ldquo;scroll&rdquo;,function(){
        var scrollHeight = document.body.scrollTop;
        var contentHeight=Getid(&ldquo;changeid&rdquo;).offsetHeight - lnSider.offsetHeight;
        if(scrollHeight>253 &amp;&amp; scrollHeight&lt;contentHeight+253){
            lnSider.style.position = &ldquo;absolute&rdquo;;
            lnSider.style.left = &ldquo;0px&rdquo;;
            lnSider.style.top = scrollHeight - 253 +&ldquo;px&rdquo;;
        }else if(scrollHeight&lt;=253){
            lnSider.style.position = &ldquo;absolute&rdquo;;
            lnSider.style.left = &ldquo;0px&rdquo;;
            lnSider.style.top = &ldquo;0px&rdquo;;
        }
    });
    </script>
{%endcodeblock%}</p>

<p>使用jQuery进行代码优化</p>

<p>{% codeblock  用js改变侧边栏的css %}
    <script>
        //获取window对象
        var jWindow = $(window);
        jWindow.scroll(function(){
            var scrollHeight = jWindow.scrollTop();
            var contentHeight= $(&ldquo;#changeid&rdquo;).Height() - $(&ldquo;#left-nav&rdquo;).Height();
            if(scrollHeight>253 &amp;&amp; scrollHeight&lt;contentHeight+253){
                $(&ldquo;#left-nav&rdquo;).css({
                    position:&ldquo;absolute&rdquo;;
                    left:&ldquo;0px&rdquo;;
                    top:scrollHeight - 253 +&ldquo;px&rdquo;;
                });
            }else if(scrollHeight&lt;=253){
                $(&ldquo;#left-nav&rdquo;).css({
                    position:&ldquo;absolute&rdquo;;
                    left:&ldquo;0px&rdquo;;
                    top:&ldquo;0px&rdquo;;
                });
            }
        });
    </script>
{%endcodeblock%}</p>

<h4>2.用jQuery实现图片的瀑布流并模拟动态加载 ，实际应用中很常见。</h4>

<p>主要思想就是:先获取每个照片盒子的宽度，计算出屏幕能放几张照片。从第二行的照片开始，放在上一行高度最小的照片下面
{%codeblock %}
//实现瀑布流图片定位
function imgLocation(){
    var box = $(&ldquo;.box&rdquo;);
    var boxWidth = box.eq(0).width();
    var num = Math.floor($(window).width()/boxWidth);
    //存第一行照片的高度
    var boxArr=[];
    box.each(function(index,value){
        var boxHeight = box.eq(index).height();
        if(index&lt;num){
            boxArr[index]= boxHeight;
        }else{
            //找到boxArr数组中最小的高度
            var minboxHeight = Math.min.apply(null,boxArr);
            //找到boxArr数组中最小的高度的下标索引
            var minboxIndex = $.inArray(minboxHeight,boxArr);
            //找到位置后，改变当前照片盒子的CSS样式
            $(value).css({
                &ldquo;position&rdquo;:&ldquo;absolute&rdquo;,
                &ldquo;top&rdquo;:minboxHeight,
                &ldquo;left&rdquo;:box.eq(minboxIndex).position().left
            });
            //堆叠照片以后，更新数组的值
            boxArr[minboxIndex]+=box.eq(index).height();
        }
    });
}
// 是否滚动到最后一张照片的一半的位置
function scrollside(){
    var box = $(&ldquo;.box&rdquo;);
    var lastboxHeight = box.last().get(0).offsetTop+Math.floor(box.last().height()/2);
    var documentHeight = $(document).width();
    var scrollHeight = $(window).scrollTop();
    return (lastboxHeight&lt;scrollHeight+documentHeight)?true:false;
}
// 模拟动态加载的过程
$(document).ready(function(){
    $(window).on(&ldquo;load&rdquo;,function(){
        imgLocation();
        //模拟后台加载出来的数据
        var dataImg = {&ldquo;data&rdquo;:[{&ldquo;src&rdquo;:&ldquo;1.jpg&rdquo;},{&ldquo;src&rdquo;:&ldquo;2.jpg&rdquo;},{&ldquo;src&rdquo;:&ldquo;3.jpg&rdquo;},{&ldquo;src&rdquo;:&ldquo;4.jpg&rdquo;},{&ldquo;src&rdquo;:&ldquo;5.jpg&rdquo;}]};
        window.onscroll = function(){
            if(scrollside()){
                if($(&ldquo;.box&rdquo;).length&lt;=125){
                    $.each(dataImg.data,function(index,value){
                    var box = $(&ldquo;<div>&rdquo;).addClass(&ldquo;box&rdquo;).appendTo($(&ldquo;#container&rdquo;));
                    var content = $(&ldquo;<div>&rdquo;).addClass(&ldquo;content&rdquo;).appendTo(box);
                    $(&ldquo;<img>&rdquo;).attr(&ldquo;src&rdquo;,&ldquo;./img/&rdquo;+$(value).attr(&ldquo;src&rdquo;)).appendTo(content);
                    });
                    // 图片加入以后实现瀑布流定位
                    imgLocation();
                }else{
                    return false;
                }
            }
        };
    });
});
{%endcodeblock%}</p>
]]></content>
  </entry>
  
</feed>
